# templates/sqlserver-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-sqlserver
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-sqlserver
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-sqlserver
    spec:
      securityContext:
        fsGroup: 10001  # mssql user UID
      initContainers:
        - name: volume-permission-fix
          image: busybox
          command: ["sh", "-c", "chown -R 10001:0 /var/opt/mssql"]
          volumeMounts:
            - name: mssql-storage
              mountPath: /var/opt/mssql
      containers:
        - name: sqlserver
          image: {{ .Values.sqlserver.image.repository }}:{{ .Values.sqlserver.image.tag }}
          ports:
            - containerPort: {{ .Values.sqlserver.port }}
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: {{ .Values.sqlserver.saPassword | quote }}
          volumeMounts:
            - name: mssql-storage
              mountPath: /var/opt/mssql
      volumes:
        - name: mssql-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-sqlserver-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-sqlserver
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-sqlserver
  ports:
    - port: {{ .Values.sqlserver.port }}
      targetPort: {{ .Values.sqlserver.port }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-sqlserver-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - {{ .Values.sqlserver.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.sqlserver.persistence.size }}
  storageClassName: {{ .Values.sqlserver.persistence.storageClass }}
