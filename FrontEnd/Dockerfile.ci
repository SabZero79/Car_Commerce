# -----------------------------------------
# 1. Base runtime image with exposed ports
#    (patched later to avoid breaking VS)
# -----------------------------------------
FROM mcr.microsoft.com/dotnet/aspnet:8.0-bookworm AS base
USER app
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# -----------------------------------------
# 2. Build stage
# -----------------------------------------
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Visual Studio expects USER app here â€” do NOT switch to root
COPY FrontEnd.csproj ./
RUN dotnet restore "FrontEnd.csproj"

COPY . .
RUN dotnet build "FrontEnd.csproj" -c $BUILD_CONFIGURATION -o /app/build

# -----------------------------------------
# 3. Publish stage
# -----------------------------------------
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "FrontEnd.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# -----------------------------------------
# 4. Final runtime stage with libexpat patch
# -----------------------------------------
FROM base AS final

# Patch libexpat1 vulnerability (CVE-2023-45853) here
USER root
RUN apt-get update && apt-get install -y libexpat1 && rm -rf /var/lib/apt/lists/*
USER app

WORKDIR /app
COPY --from=publish /app/publish .

ENTRYPOINT ["dotnet", "FrontEnd.dll"]
